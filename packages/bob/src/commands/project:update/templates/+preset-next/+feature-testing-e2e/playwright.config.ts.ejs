import { defineConfig, devices } from '@playwright/test';

const { PORT } = process.env;

const portAsNumber = Number(PORT ?? '0');
if (!PORT || Number.isNaN(portAsNumber)) {
  throw new Error('Missing PORT environment variable for testing');
}

const rootFolderName = '.playwright';
const serverBaseUrl = `http://127.0.0.1:${PORT}`;

export default defineConfig({
  testDir: './src/app',
  testMatch: /.*\.e2e\.ts/,
  fullyParallel: true,
  forbidOnly: !!process.env.CI,
  retries: process.env.CI ? 2 : 0,
  ...(process.env.CI && {
    workers: 1,
  }),
  outputDir: `${rootFolderName}/result`,
  reporter: [
    ['html', { outputFolder: `${rootFolderName}/result`, outputDir: rootFolderName }],
  ],
  use: {
    baseURL: serverBaseUrl,
    trace: 'on-first-retry',
    storageState: `${rootFolderName}/storage.json`,
  },
  globalSetup: './tests/global-playwright-setup.ts',

  /* Configure projects for major browsers */
  projects: [
    {
      name: 'chromium',
      use: { ...devices['Desktop Chrome'] },
    },

    {
      name: 'firefox',
      use: { ...devices['Desktop Firefox'] },
    },

    {
      name: 'webkit',
      use: { ...devices['Desktop Safari'] },
    },

    /* Test against mobile viewports. */
    // {
    //   name: 'Mobile Chrome',
    //   use: { ...devices['Pixel 5'] },
    // },
    // {
    //   name: 'Mobile Safari',
    //   use: { ...devices['iPhone 12'] },
    // },

    /* Test against branded browsers. */
    // {
    //   name: 'Microsoft Edge',
    //   use: { ...devices['Desktop Edge'], channel: 'msedge' },
    // },
    // {
    //   name: 'Google Chrome',
    //   use: { ...devices['Desktop Chrome'], channel: 'chrome' },
    // },
  ],

  /* Run your local dev server before starting the tests */
  webServer: {
    command: 'pnpm serve:test',
    url: serverBaseUrl,
  },
});
